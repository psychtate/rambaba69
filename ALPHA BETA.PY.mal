MAX,MIN=1000,-1000
def ab_p(depth, nodeIndex, maximizingPlayer, values, alpha, beta):
    if depth==3:
        return values[nodeIndex]
    if maximizingPlayer:
        best=MIN
        for i in range(0,2):
            val=ab_p(depth+1,nodeIndex*2+i,False,values,alpha,beta)
            best=max(best,val)
            alpha=max(alpha,best)

            if beta<=alpha:
                break
        return best
    else:
        best=MAX
        for i in range(0,2):
            val=ab_p(depth+1,nodeIndex*2+i,True,values,alpha,beta)
            best=min(best,val)
            beta=min(beta,best)

            if beta<=alpha:
                break
        return best

values=[-1,3,5,9,-6,-4,10,6]
print("-- --Alpha-Beta Prunning Algorithm-- --")
print("The Optimal value is:",ab_p(0,0,True,values,MIN,MAX))
    
