
Practical 1: Working with basic C# and ASP .NET
a) Create an application that obtains four int values from the user and displays the
product.
Source code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace practical1a_02
{
internal class Program
{
static void Main(string[] args)
{
Console.Write("Enter the First No : ");
int a = Convert.ToInt32(Console.ReadLine());
Console.Write("Enter the Second No : ");
int b = Convert.ToInt32(Console.ReadLine());
Console.Write("Enter the Third No : ");
int c = Convert.ToInt32(Console.ReadLine());
Console.Write("Enter the Fourth No : ");
int d = Convert.ToInt32(Console.ReadLine());
int product = a * b * c * d;
int sum = a + b + c + d;
Console.WriteLine("Product is : " + product + " \nSum is : " + sum);
Console.ReadLine();
} }
}

b) Create an application to demonstrate string operations
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace practical1b_02
{
internal class Program
{
static void Main(string[] args)
{
String s, s1, s2, s3, s4, s5;
s = "Advanced Web Programming";
Console.WriteLine("given string is : " + s);
s1 = s.ToUpper();
Console.WriteLine("Upper Case string is : " + s1);
s2 = s.ToLower();
Console.WriteLine("Lower Case string is : " + s2);
s3 = s.Insert(2, "x");
Console.WriteLine("Inserted x in the string : " + s3);
s4 = s3.Replace("x", "q");
Console.WriteLine("Replace q with x : " + s4);
s5 = s.Insert(24, "AWP");
Console.WriteLine("Inserted AWP at the end of the string " + s5);
Console.ReadLine();
Console.ReadKey();
}
}
}

c) Create an application that receives the (Student Id, Student Name, Course Name,
Date of Birth) information from a set of students. The application should also display the
information of all the students once the data entered.
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace shubh_3
{
internal class Program
{
static void Main(string[] args)
{
Console.WriteLine("Enter the Student ID : ");
string sid = Console.ReadLine();
Console.WriteLine("Enter the Student Name : ");
string sname = Console.ReadLine();
Console.WriteLine("Enter the Student Course : ");
string scourse = Console.ReadLine();
Console.WriteLine("Enter the Student Date of Birth : ");
string sbirthdate = Console.ReadLine();
Console.WriteLine("----------------");
Console.WriteLine("Student Details");
Console.WriteLine("Student ID is : " + sid);
Console.WriteLine("Student Name is : " + sname);
Console.WriteLine("Student Course is : " + scourse);
Console.WriteLine("Student date of birth is : " + sbirthdate);
Console.ReadLine();
}
}
}


Practical 2: Working with Object Oriented C# and ASP .NET
a.) Create simple application to perform following operations:
i.) Factorial Numbers:
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Practical2ai_02
{
internal class Program
{
static void Main(string[] args)
{
int i, fact = 1, number;
Console.Write("Enter any Number: ");
number = int.Parse(Console.ReadLine());
for (i = 1; i <= number; i++)
{
fact = fact * i;
}
Console.Write("Factorial of " + number + " is: " + fact);
Console.ReadLine();
}
}
}

ii) Money Conversion
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Practical2aii_02
{
internal class Program
{
static void Main(string[] args)
{
int c;
double rupee, dollar, euro;
Console.WriteLine("Enter the Amount to Convert: ");
rupee = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Please select the conversion: ");
Console.WriteLine("1. Dollar 2. Euro ");
c = Convert.ToInt32(Console.ReadLine());
switch (c)
{
case 1:
dollar = rupee * 0.013;
Console.WriteLine("The Amount in Dollar is: " + dollar);
break;
case 2:
euro = rupee * 0.012;
Console.WriteLine("The Amount in euro is: " + euro);
break;
}
Console.ReadLine();
}
}
}

iii) Quadratic Equation:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace equation
{
internal class Program
{
static void Main(string[] args)
{
int a, b, c;
double x1, x2, det;
Console.WriteLine("Enter the value for a : ");
a = int.Parse(Console.ReadLine());
Console.WriteLine("Enter the value for b : ");
b = int.Parse(Console.ReadLine());
Console.WriteLine("Enter the value for c : ");
c = int.Parse(Console.ReadLine());
det = (b * b) - 4 * a * c;
if(det>0)
{
x1 = (-b + (Math.Sqrt(det))) / (2 * a);
x2 = (-b - (Math.Sqrt(det))) / (2 * a);
Console.WriteLine("The roots are : " + x1 +" and "+x2);
}
else if(det==0)
{
x1 = -b / 2 * a;
Console.WriteLine("The root is : " + x1);
}
else
{
Console.WriteLine("There are no roots for the equation");
}
Console.ReadLine();
}
}
}

iv) Temperature Conversion:
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace temp
{
internal class Program
{
static void Main(string[] args)
{
float cel, num, result;
Console.WriteLine("Enter the temperature in celsius : ");
cel = int.Parse(Console.ReadLine());
Console.WriteLine("To convert temp in Fahrenheit enter 1 and or enter 2 to convert into kelvin :");
num = int.Parse(Console.ReadLine());
switch (num)
{
case 1:
result = (cel * 9 / 5) + 32;
Console.WriteLine("Celsius to Farhenheit of temp " + cel + " is " + result +"F");
break;
case 2:
result = cel + 273.15f;
Console.WriteLine("Celsius to Kelvin of temp " + cel + " is " + result +"K");
break;
}
Console.ReadLine();
}

b) Create simple application to demonstrate use of following concepts:
i.) Function Overloading:
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace pract_1
{
internal class Program
{
static void Main(string[] args)
{
int var1 = Add(10);
int var2 = Add(10, 20);
int var3 = Add(45, 20, 10);
Console.WriteLine("Addition of a an a :" + var1);
Console.WriteLine("Addition of b an b :" + var2);
Console.WriteLine("Addition of c an c :" + var3);
Console.ReadLine();
}
public static int Add(int a)
{
return a;
}
public static int Add(int a,int b)
{
return a + b;
}
public static int Add(int a,int b,int c)
{
return a + b + c;
}
}
}
    
ii) Inheritance (all types):
a)Single Inheritance:
Source Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace ConsoleApp2
{
internal class Program
{
class inheritance
{
static void Main(string[] args)
{
Console.WriteLine("Enter the number :");
int num = int.Parse(Console.ReadLine());
int n1 = cube.Squ(num);
int n2 = cube.Cube(num);
Console.WriteLine("Square of the number is : " + n1);
Console.WriteLine("Cube of the number is : " + n2);
Console.ReadLine();
}
}
class square
{
public static int Squ(int a) {
return a * a;
}
}
class cube : square {
public static int Cube(int a)
{
int ver = Squ(a);
return ver * a;
}
}
}
}
 
b) Multilevel Inheritance:
Source code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace ConsoleApp2
{
internal class Program
{
class inheritance
{
static void Main(string[] args)
{
Console.WriteLine("Enter the number :");
int num = int.Parse(Console.ReadLine());
int n1 = power.Squ(num);
int n2 = power.Cube(num);
 
int n3 = power.Pow(num);
Console.WriteLine("power 2 of the number " + num + " is " + n1);
Console.WriteLine("power 3 of the number " + num + " is " + n2);
Console.WriteLine("power 4 of the number " + num + " is " + n3);
Console.ReadLine();
}
}
class square
{
public static int Squ(int a) {
return a * a;
}
}
class cube : square {
public static int Cube(int a)
{
int ver = Squ(a);
return ver * a;
}
}
class power : cube {
public static int Pow(int a)
{
int ver = Cube(a);
return ver * a;
}
}
}
}
 
 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace hierchiel {
internal class Program {
static void Main(string[] args) {
Android.Mobile();
Apple.mobile();
Apple.Mobile();
Samsung.Mobile();
Console.ReadLine();
}
class Android {
public static void Mobile() {
Console.WriteLine("This is Android");
}
}
class Apple : Android {
public static void mobile() {
Console.WriteLine("This is Apple");
}
}
class Samsung : Android {
public static void Mobile() {
Console.WriteLine("This is samsung");
}
}
}
} 
 
 
d) Multiple Inheritance:
Source code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace multiple
{
internal class Program
{
static void Main(string[] args) {
int Area,cost;
rectangle r = new rectangle();
r.setheight(10);
r.setwidth(12);
Area = r.getArea();
cost = r.getCost(Area);
Console.WriteLine("Area of the rectangle is : " + Area);
Console.WriteLine("Total paintcost of the area is : " + cost);
Console.ReadLine();
}
class shape
{
protected int height;
protected int width;
public void setheight(int h)
{
height = h;
}
public void setwidth(int w)
{
width = w;
}
}
public interface Paintcost
{
int getCost(int area);
}
class rectangle : shape, Paintcost
{
public int getArea()
{
return width * height;
}
public int getCost(int area)
{
return area * 80;
}
}
}
}
 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace multiple
{
internal class Program
{
static void Main(string[] args) {
int Area,cost,num1,num2;
rectangle r = new rectangle();
Console.WriteLine("Enter the height : ");
num1 = int.Parse(Console.ReadLine());
Console.WriteLine("Enter the width : ");
num2 = int.Parse(Console.ReadLine());
r.setheight(num1);
r.setwidth(num2);
Area = r.getArea();
cost = r.getCost(Area);
Console.WriteLine("Area of the rectangle is : " + Area);
Console.WriteLine("Total paintcost of the area is : " + cost);
Console.ReadLine();
}
class shape
{
protected int height;
protected int width;
public void setheight(int h)
{
height = h;
}
public void setwidth(int w)
{
width = w;
}
}
public interface Paintcost
{
int getCost(int area);
}
class rectangle : shape, Paintcost
{
public int getArea()
{
return width * height;
}
public int getCost(int area)
{ 
return area * 80;
}
}
}
}
 
iii) Constructor Overloading:
Source code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Example_ConstruOverl
{
internal class Program
{
static void Main(string[] args)
{
int n1, n2;
Console.WriteLine("Enter 1st number: ");
n1 = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Enter 2nd number: ");
n2 = Convert.ToInt32(Console.ReadLine());
string s;
Console.WriteLine("Enter the string: ");
s = Console.ReadLine();
Add a = new Add(n1, n2);
a.show();
Add b = new Add(n1, s);
b.show1();
Add c = new Add(n2, s);
c.show2();
Console.ReadLine();
}
class Add
{
int x, y;
double f;
string s;
public Add(int a, double b)
{
x = a;
f = b;
}
public Add(int a, string b)
{
y = a;
s = b;
}
public void show()
{
Console.WriteLine("1st Constructor Overloading [add of 1st and 2nd number]: " + (x + f));
}
public void show1()
{
Console.WriteLine("2nd Constructor Overloading [add of string and 1st number]: " + (s + y));
}
public void show2()
{
Console.WriteLine("3nd Constructor Overloading [add of string and 2nd number]: " + (s + y));
}
}
}
}
 
 
iv) Interfaces:
Source code:
Program.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Example_Interfaces
{
internal class Program

{
static void Main(string[] args)
{
Console.WriteLine("This is Odd");
Five5 obj1 = new OddEven();
obj1.One();
obj1.Three();
obj1.Five();
Console.WriteLine("\nThis is Even");
Six6 obj2 = new OddEven();
obj2.Two();
obj2.Four();
obj2.Six();
Console.ReadLine();
}
}
}
OddEven.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Example_Interfaces
{
interface One1 { void One(); };
interface Two2 { void Two(); };
interface Three3 : One1 { void Three(); };
interface Four4 : Two2 { void Four(); };
interface Five5 : Three3 { void Five(); };
interface Six6 : Four4 { void Six(); };
class OddEven : Five5, Six6
{
public void One() { Console.WriteLine("This is ONE."); }
public void Two() { Console.WriteLine("This is TWO."); }
public void Three() { Console.WriteLine("This is THREE."); }
public void Four() { Console.WriteLine("This is FOUR."); }
public void Five() { Console.WriteLine("This is FIVE."); }
public void Six() { Console.WriteLine("This is SIX."); }
}
}
 
 
c) Create simple application to demonstrate use of following concepts:
i) Using Delegates and events:
Source code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Delegates
{
internal class Program
{
delegate int numchg(int n);
public static int num = 10;
public static int Addnum(int a)
{
num = num + a;
return num;
}
public static int Multinum(int a)
{
num = num * a;
return num;
}
public static int getNum()
{
return num;
}
static void Main(string[] args)
{
int n;
Console.WriteLine("Enter the number: ");
n = Convert.ToInt32(Console.ReadLine());
numchg nc = new numchg(Addnum);
numchg nuch = new numchg(Multinum);
nc(n);
Console.WriteLine("The addition is: " + getNum());
nuch(n);
Console.WriteLine("The multiplication is: " + getNum());
Console.ReadLine();
}
}
}
 
 
ii) Exception Handling:
Source code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Exeception_Handling
{
internal class Program
{
static void Main(string[] args)
{
int x, div;
Console.WriteLine("Enter the value: ");
x = Convert.ToInt32(Console.ReadLine());
try
{
div = 100 / x;
Console.WriteLine("Result is: " + div);
}
catch (DivideByZeroException e)
{
Console.WriteLine("Exception: " + e);
}
finally
{
Console.WriteLine("Thank You.");
}
Console.ReadLine();
}
}
}
 
Practical 3: Working with Web Forms and Controls
a) Create a simple web page with various sever controls to demonstrate setting and use
of their properties. (Example : AutoPostBack)
Source code:
WebForm1.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace registration_form
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void RadioButton1_CheckedChanged(object sender, EventArgs e)
{
}
protected void Button1_Click(object sender, EventArgs e)
{
Lstdinfo.Text = "Student Information:";
Lname.Text = "Name : " + TextBox1.Text;
Lroll.Text = "Roll no : " + TextBox2.Text;
Ldiv.Text = "Div : " + TextBox3.Text;
Lradio.Text = "Language known is : " + RadioButtonList1.SelectedValue;
Lcourse.Text = "Course is : " + DropDownList1.SelectedItem;
}
}
}

WebForm1.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="registration_form.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Label ID="Label1" runat="server" Text="Name:"></asp:Label>
<asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
<br />
<asp:Label ID="Label2" runat="server" Text="Roll No:"></asp:Label>
<asp:TextBox ID="TextBox2" runat="server"></asp:TextBox>
<br />
<asp:Label ID="Label3" runat="server" Text="DIV:"></asp:Label>
<asp:TextBox ID="TextBox3" runat="server"></asp:TextBox>
<br />
<br />
Language known:<asp:RadioButtonList ID="RadioButtonList1" runat="server">
<asp:ListItem>java</asp:ListItem>
<asp:ListItem>python</asp:ListItem>
<asp:ListItem>c++</asp:ListItem>
</asp:RadioButtonList>
<br />
<asp:Label ID="Label4" runat="server" Text="Courses: "></asp:Label>
<asp:DropDownList ID="DropDownList1" runat="server">
<asp:ListItem>Bsc.IT</asp:ListItem>
<asp:ListItem>Bsc.CS</asp:ListItem>
<asp:ListItem>Bsc.plain</asp:ListItem>
</asp:DropDownList>
<br />
<br />
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Button" />
<br />
<br />
<asp:Label ID="Lstdinfo" runat="server"></asp:Label>
<br />
<asp:Label ID="Lname" runat="server"></asp:Label>
<br />
<asp:Label ID="Lroll" runat="server"></asp:Label>
<br />
<asp:Label ID="Ldiv" runat="server"></asp:Label>
<br />
  COLLEGE 31
 
<asp:Label ID="Lradio" runat="server"></asp:Label>
<br />
<asp:Label ID="Lcourse" runat="server"></asp:Label>
</div>
</form>
</body>
</html>
 
b) Demonstrate the use of Calendar control to perform following operations.
i) Display messages in a calendar control
ii) Display vacation in a calendar control
iii) Selected day in a calendar control using style
iv) Difference between two calendar dates
 
Source code:
Webform1.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Calender_Ex.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Label ID="Label1" runat="server" Text="Calender"></asp:Label>
<br />
<asp:Calendar ID="Calendar1" runat="server" BackColor="White" BorderColor="Black"
Font-Names="Verdana" Font-Size="9pt" ForeColor="Black" Height="250px"
OnDayRender="Calendar1_DayRender" Width="330px" BorderStyle="Solid" CellSpacing="1"
NextPrevFormat="ShortMonth">
<DayHeaderStyle ForeColor="#333333" Height="8pt" Font-Bold="True" Font-Size="8pt" />
<DayStyle BackColor="#CCCCCC" />
<NextPrevStyle Font-Size="8pt" ForeColor="White" Font-Bold="True" />
<OtherMonthDayStyle ForeColor="#999999" />
<SelectedDayStyle BackColor="#333399" ForeColor="White" />
<TitleStyle BackColor="#333399" Font-Bold="True" Font-Size="12pt" ForeColor="White"
Height="12pt" BorderStyle="Solid" />
<TodayDayStyle BackColor="#999999" ForeColor="White" />
</asp:Calendar>
<br />
<asp:Label ID="Label2" runat="server" Text="Today's Date: "></asp:Label>
<asp:Label ID="today" runat="server"></asp:Label>
<br />
<br />
<asp:Label ID="Label7" runat="server" Text="Selected date: "></asp:Label>
<asp:Label ID="select" runat="server"></asp:Label>
<br />
<br />
<asp:Label ID="Label8" runat="server" Text="Day's left from selected date: "></asp:Label>
<asp:Label ID="sday" runat="server"></asp:Label>
<br />
<br />
<asp:Label ID="Label3" runat="server" Text="Diwali's Date: "></asp:Label>
  COLLEGE 33
 
<asp:Label ID="diwali" runat="server"></asp:Label>
<br />
<br />
<asp:Label ID="Label4" runat="server" Text="Day's Left for diwali: "></asp:Label>
<asp:Label ID="daysleft" runat="server"></asp:Label>
<br />
<br />
<asp:Label ID="Label5" runat="server" Text="New Year's Date: "></asp:Label>
<asp:Label ID="newyear" runat="server"></asp:Label>
<br />
<br />
<asp:Label ID="Label6" runat="server" Text="Day's left For New Year: "></asp:Label>
<asp:Label ID="nydays" runat="server"></asp:Label>
<br />
<br />
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Results" />
</div>
</form>
</body>
</html>
WebForm1.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Calender_Ex
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Calendar1_DayRender(object sender, DayRenderEventArgs e)
{
if (e.Day.Date.Day == 11 & e.Day.Date.Month == 11)
{
e.Cell.BackColor = System.Drawing.Color.LightPink;
Label lbl = new Label();
lbl.Text = "<br/>Happy Diwali";
  COLLEGE 34
 
e.Cell.Controls.Add(lbl);
Image img = new Image();
img.ImageUrl =
"https://tse2.mm.bing.net/th?id=OIP.dDJXAJ3LJJdS__Bb6j7R5AHaFj&pid=Api&P=0";
img.Height = Unit.Pixel(20);
img.Width = Unit.Pixel(20);
e.Cell.Controls.Add(img);
}
}
protected void Button1_Click(object sender, EventArgs e)
{
Calendar1.Caption = "Calender";
Calendar1.FirstDayOfWeek = FirstDayOfWeek.Sunday;
Calendar1.NextPrevFormat = NextPrevFormat.ShortMonth;
Calendar1.TitleFormat = TitleFormat.Month;
today.Text = Calendar1.TodaysDate.ToShortDateString();
select.Text = Calendar1.SelectedDate.ToString();
DateTime now = Calendar1.SelectedDate;
DateTime after = DateTime.Now;
TimeSpan d = now - after;
sday.Text = d.Days.ToString();
diwali.Text = "11 - 11 - 2022";
TimeSpan a = new DateTime(2022, 11, 11) - DateTime.Now;
daysleft.Text = a.Days.ToString();
newyear.Text = "31 - 12 - 2022";
TimeSpan d1 = new DateTime(2022, 12, 31) - DateTime.Now;
nydays.Text = d1.Days.ToString();
}
}
}
 
c) Demonstrate the use of Treeview control performs following operations.
i) Treeview Control and Datalist
ii) Treeview Operations
Source code:
WebForm1.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="treeview.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<asp:TreeView ID="TreeView1" runat="server">
 
<HoverNodeStyle Font-Underline="True" ForeColor="#5555DD" />
<Nodes>
<asp:TreeNode Text="  College" Value="  College">
<asp:TreeNode
NavigateUrl="https://tse1.mm.bing.net/th?id=OIP.Kx6cxuornayRrlBQy-yEtwHaE8&pid=Api&P=0&w=268
&h=178" Text="Junior clg" Value="Junior clg"></asp:TreeNode>
<asp:TreeNode
NavigateUrl="https://tse3.mm.bing.net/th?id=OIP.xWK0ve-UN0y4W9F0dMmNnQHaFj&pid=Api&P=0&w
=239&h=179" Text="Degree clg" Value="Degree clg"></asp:TreeNode>
</asp:TreeNode>
<asp:TreeNode Text="Degree" Value="Degree">
<asp:TreeNode
NavigateUrl="https://tse2.mm.bing.net/th?id=OIP.7Tfcsj8S42q5tKgmhX1CMwHaEX&pid=Api&P=0&w=3
09&h=182" Text="BSC.IT" Value="BSC.IT"></asp:TreeNode>
<asp:TreeNode
NavigateUrl="https://tse2.mm.bing.net/th?id=OIP.0wcd-3dtGwxKzAihsbARYgHaEN&pid=Api&P=0&w=26
9&h=153" Text="BSC.CS" Value="BSC.CS"></asp:TreeNode>
<asp:TreeNode
NavigateUrl="https://tse1.mm.bing.net/th?id=OIP.nY8B-4oJusshkdiH1-H33AHaFX&pid=Api&P=0&w=231
&h=167" Text="BSC.BT" Value="BSC.BT"></asp:TreeNode>
</asp:TreeNode>
</Nodes>
<NodeStyle Font-Names="Verdana" Font-Size="8pt" ForeColor="Black" HorizontalPadding="5px"
NodeSpacing="0px" VerticalPadding="0px" />
<ParentNodeStyle Font-Bold="False" />
<SelectedNodeStyle Font-Underline="True" ForeColor="#5555DD" HorizontalPadding="0px"
VerticalPadding="0px" />
</asp:TreeView>
<div>
<br />
<asp:DataList ID="DataList1" runat="server">
<ItemTemplate>
Roll no: <%# Eval("sid") %>
<br />
Name: <%# Eval("sname") %>
<br />
Class: <%# Eval("sclass") %>
</ItemTemplate>
</asp:DataList>
<asp:Xml ID="Xml1" runat="server"></asp:Xml>
<br />
<br />
</div>
</form>
<p> 
&nbsp;</p>
</body>
</html>
WebForm1.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
namespace treeview
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
if (!IsPostBack)
{
bindData();
}
}
protected void bindData()
{
DataSet ds = new DataSet();
ds.ReadXml(Server.MapPath("XMLFile1.xml"));
if (ds != null && ds.HasChanges())
{
DataList1.DataSource = ds;
DataList1.DataBind();
}
else
{
DataList1.DataBind();
}
}
}
} 
XMLFile1.xml
<?xml version="1.0" encoding="utf-8" ?>
<student_information>
<student>
<sid>3002</sid>
<sname>Shubham Bane</sname>
<sclass>Bsc.IT</sclass>
</student>
<student>
<sid>3003</sid>
<sname>Suman yadav</sname>
<sclass>Bsc.IT</sclass>
</student>
<student>
<sid>3004</sid>
<sname>Rohan Pawar</sname>
<sclass>Bsc.CS</sclass>
</student>
<student>
<sid>3004</sid>
<sname>Aditya jaiswal</sname>
<sclass>Bsc.BT</sclass>
</student>
<student>
<sid>3005</sid>
<sname>Omkar Yewale</sname>
<sclass>Bsc.BIOTECH</sclass>
</student>
</student_information>

Practical 4: Working with Form Controls
a) Create a Registration form to demonstrate use of various Validation controls.
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="pract_4.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<br />
<table class="auto-style1">
<tr>
<td class="auto-style2">
<asp:Label ID="Label1" runat="server" Text="Enter Name: "></asp:Label>
</td>
<td>
<asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
<asp:RequiredFieldValidator ID="RequiredFieldValidator1" runat="server" ControlToValidate="TextBox1"
ErrorMessage="Please Enter the
Name" ForeColor="Red"></asp:RequiredFieldValidator>
</td>
</tr>
<tr>
<td class="auto-style2">
<asp:Label ID="Label2" runat="server" Text="Age: "></asp:Label>
</td>
<td>
<asp:TextBox ID="TextBox2" runat="server"></asp:TextBox>
<asp:RequiredFieldValidator ID="RequiredFieldValidator3" runat="server" ControlToValidate="TextBox2"
ErrorMessage="Please Enter the Age"
ForeColor="Red"></asp:RequiredFieldValidator>
<asp:RangeValidator ID="RangeValidator1" runat="server" ControlToValidate="TextBox2"
ErrorMessage="Age should be between 20 to 60" ForeColor="Red" MaximumValue="60"
MinimumValue="20"></asp:RangeValidator>
</td>
</tr>
<tr>
<td class="auto-style2">
<asp:Label ID="Label3" runat="server" Text="Email Id:"></asp:Label>
</td>
<td>
<asp:TextBox ID="TextBox3" runat="server"></asp:TextBox>
<asp:RequiredFieldValidator ID="RequiredFieldValidator4" runat="server" ControlToValidate="TextBox3"
ErrorMessage="Please Enter the
email id" ForeColor="Red"></asp:RequiredFieldValidator>
<asp:RegularExpressionValidator ID="RegularExpressionValidator1" runat="server"
ControlToValidate="TextBox3" ErrorMessage="Enter
the correct email Id" ForeColor="Red"
ValidationExpression="\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*"></asp:RegularExpressionValidator>
</td>
</tr>
<tr>
<td class="auto-style2">
<asp:Label ID="Label4" runat="server" Text="Password: "></asp:Label>
</td>
<td>
<asp:TextBox ID="TextBox4" runat="server"></asp:TextBox>
<asp:RequiredFieldValidator ID="RequiredFieldValidator2" runat="server" ControlToValidate="TextBox4"
ErrorMessage="Please Enter the
password" ForeColor="Red"></asp:RequiredFieldValidator>
<asp:CustomValidator ID="CustomValidator1" runat="server"
ClientValidationFunction="CustomValidator1_ServerValidate"
ControlToValidate="TextBox4" ErrorMessage="Password should contain only 8 characters"
ForeColor="Red"
OnServerValidate="CustomValidator1_ServerValidate"></asp:CustomValidator>
</td>
</tr>
<tr>
<td class="auto-style2">
<asp:Label ID="Label5" runat="server" Text="Confirm Password: "></asp:Label>
</td>
<td>
<asp:TextBox ID="TextBox5" runat="server"></asp:TextBox>
<asp:RequiredFieldValidator ID="RequiredFieldValidator5" runat="server" ControlToValidate="TextBox5"
ErrorMessage="Please enter the
password" ForeColor="Red"></asp:RequiredFieldValidator>
<asp:CompareValidator ID="CompareValidator1" runat="server" ControlToCompare="TextBox4"
ControlToValidate="TextBox5"
ErrorMessage="Enter the same Password" ForeColor="Red"></asp:CompareValidator>
</td>
</tr>
<tr> 
<td class="auto-style2">
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Button" />
</td>
<td>&nbsp;</td>
</tr>
</table>
<asp:ValidationSummary ID="ValidationSummary1" runat="server" ForeColor="Red" />
<br />
<br />
<br />
</div>
</form>
</body>
</html>
WebForm1.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace pract_4
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void CustomValidator1_ServerValidate(object source, ServerValidateEventArgs e)
{
if (e.Value.Length == 8)
{
e.IsValid = true;
}
else
{
e.IsValid = false;
}
}
protected void Button1_Click(object sender, EventArgs e)
{
if (Page.IsValid)
  COLLEGE 43
 
{
Console.WriteLine("Thank You!");
}
}
}
}
Web.config code:
<?xml version="1.0" encoding="utf-8"?>
<!--
For more information on how to configure your ASP.NET application, please visit
https://go.microsoft.com/fwlink/?LinkId=169433
-->
<configuration>
<system.web>
<compilation debug="true" targetFramework="4.7.2" />
<httpRuntime targetFramework="4.7.2" />
</system.web>
<appSettings>
<add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
</appSettings>
<system.codedom>
<compilers>
<compiler language="c#;cs;csharp" extension=".cs"
type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider,
Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral,
PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default
/nowarn:1659;1699;1701" />
<compiler language="vb;vbs;visualbasic;vbscript" extension=".vb"
type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider,
Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral,
PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default
/nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
</compilers>
</system.codedom>
</configuration>

 
b) Create Web Form to demonstrate use of Adrotator Control:
Source code:
WebForm1.aspx:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Addrotater.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server"> 
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:AdRotator ID="AdRotator1" runat="server" AdvertisementFile="~/XMLFile1.xml" />
</div>
</form>
</body>
</html>
Xml
<?xml version="1.0" encoding="utf-8" ?>
<Advertisements>
<Ad>
<ImageUrl>~/Images/diwali.jpg</ImageUrl>
<NavigateUrl>https://images.indianexpress.com/2020/11/diwali-feature-1.jpg</NavigateUrl>
<AltText>Happy Diwali</AltText>
<Impression>3</Impression>
<Keyword>Diwali</Keyword>
</Ad>
<Ad>
<ImageUrl>~/Images/ganpati.jpg</ImageUrl>
<NavigateUrl>https://www.bajajfinservmarkets.in/discover/wp-content/uploads/2019/09/2.png</NavigateUrl
>
<AltText>Ganpati Bappa Morya</AltText>
<Impression>2</Impression>
<Keyword>Ganesh Utsav</Keyword>
</Ad>
<Ad>
<ImageUrl>~/Images/newyear.jpg</ImageUrl>
<NavigateUrl>https://st2.depositphotos.com/1938335/5673/v/450/depositphotos_56730693-stock-illustration
-merry-christmas-and-happy-new.jpg</NavigateUrl>
<AltText>Happy New Year</AltText>
<Impression>5</Impression>
<Keyword>Newyear</Keyword>
</Ad>
</Advertisements>
 
 
c) Create Web Form to demonstrate use User Controls:
Source code:
WebUserControl1.aspx code:
<%@ Control Language="C#" AutoEventWireup="true" CodeBehind="WebUserControl1.ascx.cs"
Inherits="usercontrols.WebUserControl1" %>
<table>
<tr>
<td>
<fieldset>
<asp:Label ID="lblMessage" runat="server"></asp:Label>
</fieldset>
</td>
</tr>
<tr>
<td>
<asp:Label ID="lblName" runat="server" Text="Name"></asp:Label>
</td>
<td>
<asp:TextBox ID="txtName" runat="server"></asp:TextBox>
</td>
</tr>
<tr>
<td>
<asp:Label ID="lblAddress" runat="server" Text="Address"></asp:Label>
</td>
<td>
<asp:TextBox ID="txtAddress" runat="server"></asp:TextBox>
</td>
</tr>
<tr>
<td>
<asp:Label ID="lblPhone" runat="server" Text="Phone"></asp:Label>
</td>
<td>
<asp:TextBox ID="txtPhone" runat="server"></asp:TextBox>
</td>
</tr>
<tr>
<td>
<asp:Label ID="lblEmail" runat="server" Text="Email"></asp:Label>
</td>
<td>
<asp:TextBox ID="txtEmail" runat="server"></asp:TextBox>
</td>
</tr>
<tr>
<td>
<asp:Button ID="btnSubmit" runat="server" Text="Submit" OnClick="btnSubmit_Click" />
</td>
</tr>
</table>
WebUserControl1.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace usercontrols
{
 public partial class WebUserControl1 : System.Web.UI.UserControl
{
private string _header;
public string Header
{
get { return _header; }
set { _header = value; }
}
protected void Page_Load(object sender, EventArgs e)
{
lblMessage.Text = _header;
}
protected void btnSubmit_Click(object sender, EventArgs e)
{
}
}
}
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="usercontrols.WebForm1" %>
<%@ Register Src="~/WebUserControl1.ascx" TagPrefix="uc1" TagName="WebUserControl1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<uc1:WebUserControl1 runat="server" id="WebUserControl1" Header="User Contact Us Page" />
</div>
</form>
</body>
</html>
 
Practical 5: Working with Navigation, Beautification and Master
page:
a) Create Web Form to demonstrate use of Website Navigation controls and Site Map:
Source code:
Web.sitemap
<?xml version="1.0" encoding="utf-8" ?>
<siteMap xmlns="http://schemas.microsoft.com/AspNet/SiteMap-File-1.0" >
<siteMapNode url="https://www.w3schools.com/python/" title="python" description="python learning">
<siteMapNode url="https://reactnative.dev/docs/tutorial" title="react native" description="react native
learning" />
<siteMapNode url="https://www.java.com/en/" title="java" description="java learning" />
</siteMapNode>
</siteMap>
WebForm1.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="WebApplication4.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Menu ID="Menu1" runat="server" DataSourceID="SiteMapDataSource1">
</asp:Menu>
</div>
<asp:SiteMapDataSource ID="SiteMapDataSource1" runat="server" />
</form>
</body>
</html>
 
b) Create a web application to demonstrate use of Master Page with applying Styles and
Themes for page beautification.
Source code:
Master Page: Site1.master code:
<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site1.master.cs"
Inherits="Prac_5B.Site1" %>
<!DOCTYPE html>
<html>
<head runat="server">
<title>Master | Home Page</title>
<link href="StyleSheet1.css" rel="stylesheet" />
</head>
<body>
<div class="headerdiv">
<header class="header">
<div class="mainheading"><h2>Diwali Shopping Site</h2></div>
<div class="head">
<ul>
<li class="pages"><a href="home.aspx">Home</a></li>
<li class="pages"><a href="about.aspx">About</a></li>
<li class="pages"><a href="contact.aspx">Contact</a></li>
<li class="pages"><a href="Site1.master">Master</a></li>
</ul>
</div>
</header>
</div>
<form id="form1" runat="server">
<div class="contentpage">
<asp:ContentPlaceHolder ID="ContentPlaceHolder1" runat="server">
<p>This Is Master Page.</p><br />
<img src="Images/master.jpg" />
</asp:ContentPlaceHolder>
</div>
</form>
<div>
<footer>
<div class="foot">
<h5>Copyright @ C# Corner.</h5>
</div>
</footer>
  COLLEGE 54
AW
P
P
R
A
C
TIC
A
L
3
0
0
2
_
S
H
U
B
H
A
M
B
A
N
E
</div>
</body>
</html> CSS fo
r
M
a
s
t
e
r
p
a
g
e
:
S
t
y
l
e
S
h
e
e
t
1
.
c
s
s
c
o
d
e
:
body {
margin: 0px;
padding: 0px;
}
.headerdiv{
text-align: center;
}
.headerdiv .head ul {
display: flex;
align-items: center;
justify-content: center;
margin-left: -30px;
}
.headerdiv .head ul li {
list-style: none;
display: block;
font-size: 22px;
}
.headerdiv .head ul li a {
color: black;
border-radius: 20px;
text-decoration: none;
padding: 3px 30px;
}
.headerdiv .head ul li a:hover {
color: lightblue;
background-color: lightgoldenrodyellow;
}
.contentpage{
text-align: center;
font-size: 40px;
font-family: Algerian;
R
J
C
O
L
L
E
G
E
5
5
 
}
.contentpage img{
height: 300px;
width: 300px;
margin-top: -30px
}
.foot h5{
font-family: Calibri;
font-size: 24px;
text-align: center;
}
Home.aspx code:
<%@ Page Title="" Language="C#" MasterPageFile="~/Site1.Master" AutoEventWireup="true"
CodeBehind="home.aspx.cs" Inherits="Prac_5B.WebForm1" %>
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="server">
<div>
<p>This is Home Page.</p>
<img src="Images/home.png" />
</div>
</asp:Content>
About.aspx code:
<%@ Page Title="" Language="C#" MasterPageFile="~/Site1.Master" AutoEventWireup="true"
CodeBehind="about.aspx.cs" Inherits="Prac_5B.WebForm2" %>
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="server">
<div>
<p>This is About Page.</p>
<img src="Images/about.jpg" />
</div>
</asp:Content>
Contact.aspx code:
<%@ Page Title="" Language="C#" MasterPageFile="~/Site1.Master" AutoEventWireup="true"
CodeBehind="contact.aspx.cs" Inherits="Prac_5B.contact" %>
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="server">
<div class="contact-box">
<p>This is Contact Us Page.</p>
<div class="contacts" style="font-size: 22px; font-family: Calibri;">
<label for="name">Name: </label>
<input type="text" name="name" id="name" placeholder="Enter you name">
</div>
<div class="contacts" style="font-size: 22px; font-family: Calibri;">
<label for="email">Email: </label>
<input type="email" name="email" id="email" placeholder="Enter you email">
</div>
<div class="contacts" style="font-size: 22px; font-family: Calibri;">
<label for="phone">Phone Number: </label>
<input type="text" name="phone" id="phone" placeholder="Enter you phone number">
</div>
<div class="contacts" style="font-size: 22px; font-family: Calibri;">
<label for="message">Message: </label>
<textarea name="message" id="Message" cols="30" rows="10"></textarea>
</div>
<div class="content" style="font-size: 34px; font-family: Calibri;">
<div class="submit"><input type="submit" value="Submit"></div>
</div>
</div>
</asp:Content>
 
 
c) Create a web application to demonstrate various states of ASP.NET Pages:
i) View State:
Source code:
WebForm1.aspx
<%@ Page Language="C#" AutoEventWireup="true" EnableViewState="true"
CodeBehind="WebForm1.aspx.cs" Inherits="view_state.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<div>
User Name:-<asp:textbox id="TextBox1" runat="server"></asp:textbox>
<br />
Password :-<asp:textbox id="TextBox2" runat="server"></asp:textbox>
<br />
<asp:button id="Button1" runat="server" onclick="Button1_Click" text="Submit" />
<asp:button id="Button3" runat="server" onclick="Button3_Click" text="Restore" />
</div>
</div>
</form>
</body>
</html>
WebForm1.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace view_state
{
public partial class WebForm1 : System.Web.UI.Page
{
public string a, b;
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Button1_Click(object sender, EventArgs e)
{
//Value of Textbox1 and TectBox2 is assigin on the ViewState
ViewState["name"] = TextBox1.Text;
ViewState["password"] = TextBox2.Text;
//after clicking on Button TextBox value Will be Cleared
TextBox1.Text = TextBox2.Text = string.Empty;
}
protected void Button3_Click(object sender, EventArgs e)
{
if (ViewState["name"] != null)
{
TextBox1.Text = ViewState["name"].ToString();
}
if (ViewState["password"] != null)
{
TextBox2.Text = ViewState["password"].ToString();
}
}
}
}
 
 
ii) Query Strings:
Source code:
Webform1.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Form.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Label ID="Label1" runat="server" ForeColor="#009933" Font-Size="25px" Text="Query
String"></asp:Label>
<br />
<table>
<tr>
<td class="auto-style2">
<asp:Label ID="Label2" runat="server" Text="First Name :" Font-Size="18px"></asp:Label>
</td>
<td class="auto-style3">
<asp:TextBox ID="fname" runat="server" AutoPostBack="true"></asp:TextBox>
</td>
</tr>
<tr>
<td class="auto-style1">
<asp:Label ID="Label3" runat="server" Text="Last Name: " Font-Size="18px"></asp:Label>
</td>
<td>
<asp:TextBox ID="lname" runat="server" AutoPostBack="true"></asp:TextBox>
</td>
</tr>
<tr>
<td class="auto-style4">
<asp:Button ID="Button1" runat="server" Text="Submit" BorderStyle="Solid"
Font-Size="15px" OnClick="Button1_Click" />
</td>
</tr>
</table>
<br />
</div>
</form>
</body>
</html>
Webform1.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Form
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Button1_Click(object sender, EventArgs e)
{
Response.Redirect("WebForm2.aspx?firstname=" + fname.Text + "&lastname=" + lname.Text);
}
}
}
Webform2.aspx
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm2.aspx.cs"
Inherits="Form.WebForm2" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Label ID="Label1" runat="server" ForeColor="Maroon" Font-Size="30px" Text="Query
String"></asp:Label>
<br />
<asp:Label ID="query" runat="server" Font-Size="20px"></asp:Label>
</div>
</form>
</body>
</html>
Webform2.aspx.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Form
{
public partial class WebForm2 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
string firstname, lastname;
firstname = Request.QueryString["firstname"];
lastname = Request.QueryString["lastname"];
query.Text = "Welcome " + firstname + " " + lastname;
}
}
}
 
Practical 6: Working with Database
a) Create a web application bind data in a multiline textbox by querying in another
textbox.
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Prac_6A.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<br />
<asp:Label ID="name" runat="server" Text="Name:"></asp:Label>
<asp:TextBox ID="value" runat="server"></asp:TextBox>
<br />
<br />
<asp:Button ID="Button1" runat="server" Text="Show" OnClick="Button1_Click" />
<br />
<br />
<asp:TextBox ID="Output" runat="server" TextMode="MultiLine" Height="45px"
Width="100px"></asp:TextBox>
<br />
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:CompanyConnectionString %>" SelectCommand="SELECT * FROM [employee]
WHERE ([Name] = @Name)">
<SelectParameters>
<asp:ControlParameter ControlID="value" Name="Name" PropertyName="Text" Type="String"
/>
</SelectParameters>
</asp:SqlDataSource>
<br />
<br />
</div>
</form> 
</body>
</html>
WebForm1.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.Sql;
using System.Data.SqlClient;
namespace Prac_6A
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Button1_Click(object sender, EventArgs e)
{
SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=Company;Integrated
Security=SSPI");
con.Open();
string str = "SELECT * FROM [employee] WHERE Name='" + value.Text + "'";
SqlCommand cmd = new SqlCommand(str,con);
SqlDataReader rdr = cmd.ExecuteReader();
while (rdr.Read())
{
Output.Text = "Id: " + rdr[0].ToString() + "\nName: " + rdr[1].ToString() + "\nSalary: " +
rdr[2].ToString();
}
}
}
}
 
b) Demonstrate the use of Data list link control.
Source code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Prac_6B.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<br />
<asp:DataList ID="DataList1" runat="server" DataSourceID="SqlDataSource1">
<ItemTemplate>
ID:
<asp:Label ID="IDLabel" runat="server" Text='<%# Eval("ID") %>' />
<br />
Name:
<asp:Label ID="NameLabel" runat="server" Text='<%# Eval("Name") %>' />
<br />
Salary:
<asp:Label ID="SalaryLabel" runat="server" Text='<%# Eval("Salary") %>' />
<br />
<br />
</ItemTemplate>
</asp:DataList>
<br />
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:CompanyConnectionString %>" SelectCommand="SELECT * FROM
[employee]"></asp:SqlDataSource>
<br />
<br />
</div>
</form>
</body>
</html>
 
 
Practical 7: Working with Database
a) Create a web application to display Databinding using dropdown list control.
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="pract_7b.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<br />
<asp:DropDownList ID="DropDownList1" runat="server" AutoPostBack="True"
DataSourceID="SqlDataSource1" DataTextField="Id" DataValueField="Price">
</asp:DropDownList>
<br />
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:TblProductConnectionString2 %>" SelectCommand="SELECT * FROM
[Table_1]"></asp:SqlDataSource>
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Button" />
<br />
<br />
<asp:Label ID="Label1" runat="server" Text="your product price is : "></asp:Label>
<asp:Label ID="Label2" runat="server" Text="value"></asp:Label>
<br />
</div>
</form>
</body>
</html>

WebForm1.aspx.cs code:
using System;
using System.Collections.Generic; 
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.Sql;
using System.Data.SqlClient;
using System.Configuration;
namespace pract_7b
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
if(IsPostBack == false)
{
SqlConnection con = new SqlConnection("data source=.; database=TblProduct; integrated
security=SSPI;");
con.Open();
SqlCommand cmd = new SqlCommand("Select Id,Price from Table_1",con);
SqlDataReader rdr = cmd.ExecuteReader();
DropDownList1.DataTextField = "id";
DropDownList1.DataValueField = "Price";
DropDownList1.DataBind();
rdr.Close();
con.Close();
}
}
protected void Button1_Click(object sender, EventArgs e)
{
Label2.Text = DropDownList1.SelectedValue;
}
}
}
 
b) Create a web application for to display the phone no of an author using database.
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Prac7_B.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<br />
<asp:DropDownList ID="DropDownList1" runat="server" AutoPostBack="True"
DataSourceID="SqlDataSource1"
DataTextField="Author" DataValueField="Phone">
</asp:DropDownList>
<br />
<br />
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="show" />
  COLLEGE 70
 
<br />
<br />
<asp:Label ID="Label1" runat="server" Text="Author's Phone No. is: "></asp:Label>
<asp:Label ID="phone" runat="server"></asp:Label>
<br />
<br />
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:CompanyConnectionString %>"
SelectCommand="SELECT [Author], [Phone] FROM [Authors]"></asp:SqlDataSource>
</div>
</form>
</body>
</html>
WebForm1.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.Sql;
using System.Data.SqlClient;
namespace Prac7_B
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
if(IsPostBack == false)
{
SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=Company;Integrated
Security=SSPI");
con.Open();
SqlCommand cmd = new SqlCommand("SELECT [Author], [Phone] FROM [Authors]", con);
SqlDataReader rdr = cmd.ExecuteReader();
DropDownList1.DataTextField = "Author";
DropDownList1.DataValueField = "Phone";
DropDownList1.DataBind();
rdr.Close();
con.Close();
}
} 
protected void Button1_Click(object sender, EventArgs e)
{
phone.Text = DropDownList1.SelectedValue;
}
}
}
 
c) Create a web application for inserting and deleting record from a database. (Using
Execute-Non Query).
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs" Inherits="Prac_7_C.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:CompanyConnectionString %>" SelectCommand="SELECT * FROM
[employee]"></asp:SqlDataSource>
<br />
<asp:Label ID="Label1" runat="server" Text="Inserting &amp; Deleting Data Into
Sql:"></asp:Label>
<br />
<br />
<asp:Label ID="Label2" runat="server" Text="Enter ID: "></asp:Label>
<asp:TextBox ID="id" runat="server"></asp:TextBox>
<br />
<br />
<asp:Label ID="Label3" runat="server" Text="Enter Name: "></asp:Label>
<asp:TextBox ID="name" runat="server"></asp:TextBox>
<br />
<br />
<asp:Label ID="Label4" runat="server" Text="Enter Salary: "></asp:Label>
<asp:TextBox ID="salary" runat="server"></asp:TextBox>
<br />
<br />
<asp:Button ID="Insert" runat="server" OnClick="Insert_Click" Text="Insert" />
<asp:Button ID="Delete" runat="server" OnClick="Delete_Click" Text="Delete" />
<br />
<br />
<asp:Label ID="value" runat="server"></asp:Label>
<br />
<asp:GridView ID="GridView1" runat="server" AutoGenerateColumns="False"
DataSourceID="SqlDataSource1">
<Columns>
<asp:BoundField DataField="ID" HeaderText="ID" SortExpression="ID" />
<asp:BoundField DataField="Name" HeaderText="Name" SortExpression="Name" />
<asp:BoundField DataField="Salary" HeaderText="Salary" SortExpression="Salary" />
</Columns>
</asp:GridView>
<br />
</div>
</form>
</body>
</html>
 
WebForm1.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.Sql;
using System.Data.SqlClient;
using System.Configuration;
namespace Prac_7_C
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Insert_Click(object sender, EventArgs e)
{
SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=Company;Integrated
Security=SSPI");
con.Open();
String str;
str = "INSERT INTO [employee] (ID,Name,Salary) VALUES (" + id.Text + ",'" + name.Text + "'," +
salary.Text + ")";
SqlCommand cmd = new SqlCommand(str, con);
cmd.CommandType = System.Data.CommandType.Text;
cmd.ExecuteNonQuery();
value.Text = "Inserted Successfully";
SqlCommand cmd2 = new SqlCommand("SELECT * FROM employee",con);
SqlDataReader rdr = cmd2.ExecuteReader();
GridView1.DataBind();
rdr.Close();
con.Close();
}
protected void Delete_Click(object sender, EventArgs e)
{
SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=Company;Integrated
Security=SSPI");
con.Open();
String str;
str = "DELETE FROM employee WHERE ID=" + id.Text + "";
SqlCommand cmd1 = new SqlCommand(str, con);
SqlDataReader rdr2 = cmd1.ExecuteReader();
value.Text = "Deleted Successfully";
  COLLEGE 74
 
rdr2.Close();
SqlCommand cmd2 = new SqlCommand("SELECT * FROM employee",con);
SqlDataReader rdr = cmd2.ExecuteReader();
GridView1.DataBind();
rdr.Close();
con.Close();
}
}
}

Practical 8: Working with data controls
a) Create a web application to demonstrate various uses and properties of
SqlDataSource.
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Practical8.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:GridView ID="GridView1" runat="server" AutoGenerateColumns="False"
DataSourceID="SqlDataSource1" DataKeyNames="Id">
<Columns>
<asp:CommandField ShowSelectButton="True" />
<asp:BoundField DataField="Id" HeaderText="Id" SortExpression="Id" />
</Columns>
</asp:GridView>
<br />
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:TblProductConnectionString_29_08_2022 %>" SelectCommand="SELECT [Id] FROM
[Table_1]"></asp:SqlDataSource>
<br />
<asp:SqlDataSource ID="SqlDataSource2" runat="server" ConnectionString="<%$
ConnectionStrings:TblProductConnectionString %>" SelectCommand="SELECT * FROM [Table_1]
WHERE ([Id] = @Id)">
<SelectParameters>
<asp:ControlParameter ControlID="GridView1" Name="Id" PropertyName="SelectedValue"
Type="Int32" />
</SelectParameters>
</asp:SqlDataSource>
<br />
<asp:DetailsView ID="DetailsView1" runat="server" AutoGenerateRows="False"
DataSourceID="SqlDataSource2" Height="50px" Width="125px">
<Fields>
<asp:BoundField DataField="Id" HeaderText="Id" SortExpression="Id" />
<asp:BoundField DataField="Price" HeaderText="Price" SortExpression="Price" />
<asp:BoundField DataField="Product" HeaderText="Product" SortExpression="Product" />
</Fields>
</asp:DetailsView>
</div>
</form>
</body>
</html>
 
ii) FormView:
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="prac8a.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server"> 
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:FormView ID="FormView1" runat="server" BackColor="#FFFFCC" DataKeyNames="ID"
DataSourceID="SqlDataSource1" OnPageIndexChanging="FormView1_PageIndexChanging">
<EditItemTemplate>
ID:
<asp:Label ID="IDLabel1" runat="server" Text='<%# Eval("ID") %>' /><br />
Product:
<asp:TextBox ID="ProductTextBox" runat="server" Text='<%# Bind("Product") %>' /><br />
Price:
<asp:TextBox ID="PriceTextBox" runat="server" Text='<%# Bind("Price") %>' /><br />
<asp:LinkButton ID="UpdateButton" runat="server" CausesValidation="True"
CommandName="Update" Text="Update" />
&nbsp;<asp:LinkButton ID="UpdateCancelButton" runat="server" CausesValidation="False"
CommandName="Cancel" Text="Cancel" />
</EditItemTemplate>
<FooterStyle BackColor="#FF0066" />
<FooterTemplate>
Visit Again
</FooterTemplate>
<HeaderStyle BackColor="#FF3300" />
<HeaderTemplate>
Electronic Shop
</HeaderTemplate>
<InsertItemTemplate>
ID:
<asp:TextBox ID="IDTextBox" runat="server" Text='<%# Bind("ID") %>' /><br />
Product:
<asp:TextBox ID="ProductTextBox" runat="server" Text='<%# Bind("Product") %>' /><br />
Price:
<asp:TextBox ID="PriceTextBox" runat="server" Text='<%# Bind("Price") %>' /><br />
<asp:LinkButton ID="InsertButton" runat="server" CausesValidation="True"
CommandName="Insert" Text="Insert" />
&nbsp;<asp:LinkButton ID="InsertCancelButton" runat="server" CausesValidation="False"
CommandName="Cancel" Text="Cancel" />
</InsertItemTemplate>
<ItemTemplate>
ID:
<asp:Label ID="IDLabel" runat="server" Text='<%# Eval("ID") %>' /><br />
Product:
<asp:Label ID="ProductLabel" runat="server" Text='<%# Bind("Product") %>' /><br />
Price:
<asp:Label ID="PriceLabel" runat="server" Text='<%# Bind("Price") %>' /><br />
</ItemTemplate>
</asp:FormView>
<br />
<asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:SampleConnectionString %>" SelectCommand="SELECT * FROM
[Table_4]"></asp:SqlDataSource>
</div>
</form>
</body>
</html>
 
c) Create a web application to display Using Disconnected Data Access and Data binding
using GridView.
Source code:
WebForm1.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Prac_8C.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Button ID="Button1" runat="server" OnClick="Button1_Click" Text="Show Fetched Data " />
<br />
<br />
<asp:GridView ID="GridView1" runat="server" AutoGenerateColumns="False"
DataKeyNames="ID">
<Columns>
<asp:CommandField ShowSelectButton="True" />
<asp:BoundField DataField="ID" HeaderText="ID" ReadOnly="True" SortExpression="ID" />
<asp:BoundField DataField="Name" HeaderText="Name" SortExpression="Name" />
<asp:BoundField DataField="Salary" HeaderText="Salary" SortExpression="Salary" />
</Columns>
</asp:GridView>
<br />
<!-- <asp:SqlDataSource ID="SqlDataSource1" runat="server" ConnectionString="<%$
ConnectionStrings:CompanyConnectionString %>" SelectCommand="SELECT * FROM
[employee]"></asp:SqlDataSource>-->
<br />
</div>
</form>
</body>
</html>

WebForm1.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.Sql;
using System.Data.SqlClient;
using System.Configuration;
using System.Data;
namespace Ajax_DisconnectedDataAccess
{
public partial class Disconnected_DataAccess : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void Button1_Click(object sender, EventArgs e)
{
SqlConnection con = new SqlConnection("Data Source=.;Initial Catalog=Customer;Integrated
Security=SSPI");
GridView1.Visible = true;
con.Open();
string query = "SELECT * FROM [tblproduct]";
SqlDataAdapter sda = new SqlDataAdapter(query,con);
DataSet ds = new DataSet();
sda.Fill(ds,"Product");
GridView1.DataSource = ds;
GridView1.DataBind();
con.Close();
}
}
}
 
Practical 10: Working with AJAX and XML
a) Create a web application to demonstrate reading and writing operation with XML.
Source code:
XML.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="XMLdemo.aspx.cs"
Inherits="XMLandFormView.XMLdemo" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:Button ID="ReadBtn" runat="server" Text="Read XML" OnClick="ReadBtn_Click" /><br
/><br />
<asp:ListBox ID="ListBox1" runat="server"></asp:ListBox><br /><br />
<asp:Button ID="WriteBtn" runat="server" Text="Write XML" OnClick="WriteBtn_Click" />
</div>
</form>
</body>
</html>
XML.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Xml;
namespace XMLandFormView
{
public partial class XMLdemo : System.Web.UI.Page
 
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void ReadBtn_Click(object sender, EventArgs e)
{
String XmlNode =
"C:\\Users\\Admin\\source\\repos\\XMLandFormView\\XMLandFormView\\XMLfile.xml";
XmlReader xReader = XmlReader.Create(XmlNode);
while (xReader.Read())
{
switch (xReader.NodeType)
{
case XmlNodeType.Element:
ListBox1.Items.Add("<" + xReader.Name + ">");
break;
case XmlNodeType.Text:
ListBox1.Items.Add(xReader.Value);
break;
case XmlNodeType.EndElement:
ListBox1.Items.Add("<" + xReader.Name + ">");
break;
}
}
}
protected void WriteBtn_Click(object sender, EventArgs e)
{
XmlTextWriter textWriter = new
XmlTextWriter("C:\\Users\\Admin\\source\\repos\\XMLandFormView\\XMLandFormView\\XMLfile.xml",
null);
textWriter.WriteStartDocument();
textWriter.WriteStartElement("Student");
textWriter.WriteStartElement("Name", " ");
textWriter.WriteString("Shubham");
textWriter.WriteEndElement();
textWriter.WriteStartElement("Roll_No", " ");
textWriter.WriteString("3002");
textWriter.WriteEndElement();
textWriter.WriteEndElement();
textWriter.WriteEndDocument();
textWriter.Close();
}
}
}
 
 
b) Create a web application to demonstrate use of various Ajax controls.
i) Timer Control:
Source code:
Ajax_TimerControl.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Ajax_timerControl.aspx.cs"
Inherits="Ajax_DisconnectedDataAccess.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:ScriptManager ID="ScriptManager1" runat="server"></asp:ScriptManager>
 
<asp:UpdatePanel ID="UpdatePanel1" runat="server">
<ContentTemplate>
<asp:Panel ID="Panel1" runat="server" BackColor="purple" BorderColor="Yellow"
BorderWidth="5">
<center>
<asp:Label ID="Label2" runat="server" BackColor="ButtonShadow" BorderColor=""
Text="Label"></asp:Label>
<asp:Timer ID="Timer1" runat="server" Interval="1000"></asp:Timer>
</center>
</asp:Panel>
</ContentTemplate>
</asp:UpdatePanel>
</div>
</form>
</body>
</html>
Ajax_TimerControl.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Ajax_DisconnectedDataAccess
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
Label2.Text = "Page refreshed at: " + DateTime.Today.ToLongDateString() + "Time " +
DateTime.Now.ToLongTimeString();
}
}
}
 
ii) Update Progress Timer Control:
Source code:
Ajax_UpdateProgessControl.aspx code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Ajax_UpdateProgressControl.aspx.cs"
Inherits="Ajax_DisconnectedDataAccess.Ajax_UpdateProgressControl" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:ScriptManager ID="ScriptManager1" runat="server"></asp:ScriptManager>
<asp:UpdateProgress ID="UpdateProgress1" runat="server">
<ProgressTemplate>
<asp:Label ID="Label2" runat="server" Text="Time is Updated..."></asp:Label>
</ProgressTemplate>
</asp:UpdateProgress>
<asp:UpdatePanel runat="server">
<ContentTemplate>
Update Progress Control
<br />
<asp:Label ID="Label1" runat="server" Text=""></asp:Label>
<br />
<asp:Button ID="Button1" runat="server" Text="Refresh Time" />
</ContentTemplate>
</asp:UpdatePanel>
</div>
  COLLEGE 97
 
</form>
</body>
</html>
Ajax_UpdateProgessControl.aspx.cs code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Ajax_DisconnectedDataAccess
{
public partial class Ajax_UpdateProgressControl : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
System.Threading.Thread.Sleep(2000);
Label1.Text = DateTime.Now.ToString();
}
}
}

 
iii.) Update Panel:
Source Code:
WebForm1.aspx Code:
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm1.aspx.cs"
Inherits="Pract_10.WebForm1" %>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
<title></title>
</head>
<body>
<form id="form1" runat="server">
<div>
<asp:ScriptManager ID="ScriptManager1" runat="server" />
<asp:UpdatePanel runat="server" id="UpdatePanel" updatemode="Conditional">
<Triggers>
<asp:AsyncPostBackTrigger controlid="UpdateButton2" eventname="Click" />
</Triggers>
<ContentTemplate>
<asp:Label runat="server" id="DateTimeLabel1" />
<asp:Button runat="server" id="UpdateButton1" onclick="UpdateButton_Click" text="Update" />
</ContentTemplate>
</asp:UpdatePanel>
<asp:UpdatePanel runat="server" id="UpdatePanel1" updatemode="Conditional">
<ContentTemplate>
<asp:Label runat="server" id="DateTimeLabel2" />
<asp:Button runat="server" id="UpdateButton2" onclick="UpdateButton_Click" text="Update" />
</ContentTemplate>
</asp:UpdatePanel>
</div>
</form>
</body>
</html>
WebForm1.aspx.cs Code:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
 
using System.Web.UI;
using System.Web.UI.WebControls;
namespace Pract_10
{
public partial class WebForm1 : System.Web.UI.Page
{
protected void Page_Load(object sender, EventArgs e)
{
}
protected void UpdateButton_Click(object sender, EventArgs e)
{
DateTimeLabel1.Text = DateTime.Now.ToString();
DateTimeLabel2.Text = DateTime.Now.ToString();
}
}
}
